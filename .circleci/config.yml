# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  say-hello:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: cimg/base:stable
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: "Say hello"
          command: "echo Hello, World!"
  build_and_deploy:
    docker:
      - image: 'cimg/base:stable'
    steps:
      - checkout
      - cloudrun/init
      - cloudrun/build:
          tag: 'gcr.io/${GOOGLE_PROJECT_ID}/test-${CIRCLE_SHA1}'
      - cloudrun/deploy:
          image: 'gcr.io/${GOOGLE_PROJECT_ID}/test-${CIRCLE_SHA1}'
          platform: managed
          region: eu-west1
          service-name: example-service
          unauthenticated: true
      - run:
          command: >
            # A simple example of how a deployed managed service could be
            verified or further tested.

            # This step will send request our "API" and fail if there is
            unexpected output.

            GCP_API_RESULTS=$(curl -s "$GCP_DEPLOY_ENDPOINT")

            if [ "$GCP_API_RESULTS" != "Hello World!" ]; then
              echo "Result is unexpected"
              echo 'Result: '
              curl -s "$GCP_DEPLOY_ENDPOINT"
              exit 1;
            fi
          name: Test managed deployed service.

orbs:
  cloudrun: circleci/gcp-cloud-run@1.0.2
workflows:
  build_and_deploy_to_managed_workflow:
    jobs:
      - build_and_deploy
# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
  say-hello-workflow:
    jobs:
      - say-hello
